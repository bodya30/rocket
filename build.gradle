buildscript {
	ext {
		springBootVersion = '2.1.1.RELEASE'
		testSetsPluginVersion = '2.1.1'
		taskTreePluginVersion = '1.3.1'
	}
	repositories {
		mavenCentral()
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}",
				"org.unbroken-dome.gradle-plugins:gradle-testsets-plugin:${testSetsPluginVersion}",
				"gradle.plugin.com.dorongold.plugins:task-tree:${taskTreePluginVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'war'
apply plugin: 'org.unbroken-dome.test-sets'
apply plugin: "com.dorongold.task-tree"

group = 'com.epam.mentoring'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

testSets {
	integrationTest { dirName = 'integration-test' }
}

dependencies {
	implementation('org.springframework.boot:spring-boot-starter-jdbc')
	implementation('org.springframework.boot:spring-boot-starter-data-jpa')
	implementation('org.springframework.boot:spring-boot-starter-security')
	implementation('org.springframework.boot:spring-boot-starter-validation')
	implementation('org.springframework.boot:spring-boot-starter-web')
	implementation('org.springframework.boot:spring-boot-starter-mail')
	implementation('org.freemarker:freemarker')
	implementation('org.apache.commons:commons-collections4:4.0')
	implementation('javax.servlet:jstl')
	implementation('org.springframework.security:spring-security-taglibs')
	implementation('org.passay:passay:1.2.0')
    implementation('org.springframework.social:spring-social-web:1.1.6.RELEASE')
    implementation('org.springframework.social:spring-social-facebook:2.0.3.RELEASE')
	runtimeOnly('org.springframework.boot:spring-boot-devtools')
	runtime('mysql:mysql-connector-java:5.1.39')
	runtimeOnly('org.springframework.boot:spring-boot-starter-tomcat')
	runtimeOnly('org.apache.tomcat.embed:tomcat-embed-jasper')
	testImplementation('org.springframework.boot:spring-boot-starter-test')
	testImplementation('org.springframework.security:spring-security-test')
	testImplementation('org.junit.jupiter:junit-jupiter-api')
	testImplementation('org.mockito:mockito-junit-jupiter')
	testRuntime('org.junit.jupiter:junit-jupiter-engine')
	testRuntime('org.junit.vintage:junit-vintage-engine')
	testRuntime('org.junit.platform:junit-platform-launcher')
	testRuntime('org.junit.platform:junit-platform-runner')
}

tasks.withType(Test) {
	// Make all tests use JUnit 5
	useJUnitPlatform()
	testLogging {
		showStandardStreams = true
	}
}